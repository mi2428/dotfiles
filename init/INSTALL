#!/bin/bash
set -e
cd $(dirname $0)
declare -r DOTBASE=$(cd "../"; pwd)

[[ -z "$XDG_CONFIG_HOME" ]] && \
declare -r XDGBASE="$HOME/.config" || declare -r XDGBASE=$XDG_CONFIG_HOME

linker() {
    local pkg="$1"
    local item="$2"
    local xdg_option="$3"
    local base="$4/$pkg"
    local dry="$5"
    case $xdg_option in
    "true")
        mkdir -p "$XDGBASE/$pkg"
        [[ $dry == "true" ]] && echo "ln -snf $base/$item $XDGBASE/$pkg/$item" || \
        ln -snf "$base/$item" "$XDGBASE/$pkg/$item"
        ;;
    "false")
        if [[ -d "$base/$item" ]]; then
            for subitem in $(cd "$base/$item"; find . -maxdepth 1 -not -name "."); do
                local subitem=$(basename $subitem)
                [[ $dry == "true" ]] && echo "ln -snf $base/$item/$subitem $HOME/.$item/$subitem" || \
                (mkdir -p "$HOME/.$item" && ln -snf "$base/$item/$subitem" "$HOME/.$item/$subitem")
            done
        elif [[ -f "$base/$item" ]]; then
            [[ $dry == "true" ]] && echo "ln -snf $base/$item $HOME/.$item" || \
            ln -snf "$base/$item" "$HOME/.$item"
        fi
        ;;
    esac
}

installer() {
    local pkgbase=$1
    local excluded=$2
    local dry=$3
    for pkg in $(cd "$pkgbase"; find . -maxdepth 1 -type d -not -name "$excluded" -not -name "."); do
        local pkg=$(basename $pkg)
        local xdg_option="false"
        [[ "$pkg" == "nvim" ]] && xdg_option="true"
        [[ "$pkg" == "xfce4" ]] && xdg_option="true"
        [[ "$pkg" == "dwb" ]] && xdg_option="true"
        [[ "$pkg" == "compton" ]] && xdg_option="true"
        [[ "$pkg" == "systemd" ]] && xdg_option="true"
        [[ "$pkg" == "rofi" ]] && xdg_option="true"
        [[ "$pkg" == "gtk-3.0" ]] && xdg_option="true"
        [[ "$pkg" == "karabiner" ]] && xdg_option="true"
        for item in $(cd "$pkgbase/$pkg"; find . -maxdepth 1 -not -name "."); do
            local item=$(basename $item)
            linker $pkg $item $xdg_option $pkgbase $dry
        done
    done
}

basic_install() {
    local dry="$1"
    installer "$DOTBASE/etc" "hosts" $dry
}

patch_install() {
    local patchtype="$1"
    local dry="$2"
    installer "$DOTBASE/etc/hosts/$patchtype" "." $dry
}

declare dry="false"
while getopts dt: OPT; do
    case $OPT in
    "d")
        dry="true" ;;
    "t")
        case "$OPTARG" in
        "basic")
            basic_install $dry ;;
        "linux")
            basic_install $dry && patch_install "linux" $dry ;;
        "linux-server")
            basic_install $dry && patch_install "linux-server" $dry ;;
        "pi")
            basic_install $dry && patch_install "pi" $dry ;;
        "lab")
            basic_install $dry && patch_install "lab" $dry ;;
        "yoga")
            basic_install $dry && patch_install "yoga" $dry ;;
        "mac")
            basic_install $dry && patch_install "mac" $dry ;;
        "")
            # basic_install $dry && patch_install "detect" $dry ;;
            echo "./INSTALL [-d] -t [basic|linux|linux-server|pi|lab|mac|uninstall]"
        esac
        ;;
    esac
done
