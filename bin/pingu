#!/usr/bin/env python3
from argparse import ArgumentParser
from datetime import datetime as dt
from time import sleep
from ping3 import ping


def verbose_ping(args):
    c = 0
    while True:
        time = ping(args.host, size=args.size, timeout=args.timeout, unit="ms")
        ts = dt.now()
        c += 1

        if time is not None:
            time = round(time, 2)
            print(f"{ts} \033[1;32mOK\033[0m {args.host} seq={c} size={args.size} time={time:.2f} ms")
            sleep(args.interval-time/1000)
        else:
            print(f"{ts} \033[1;31mNG\033[0m {args.host} seq={c} size={args.size} timeout")


def main():
    parser = ArgumentParser()
    parser.add_argument("-l", dest="size",     type=int,   default=56, help="payload size (bytes)")
    parser.add_argument("-t", dest="timeout",  type=float, default=1,  help="request timeout (sec)")
    parser.add_argument("-w", dest="interval", type=float, default=1,  help="request interval (sec)")
    parser.add_argument("host", help="destination address")

    args = parser.parse_args()

    try:
        verbose_ping(args)
    except KeyboardInterrupt:
        return


if __name__ == "__main__":
    main()
