#!/bin/bash

if [[ -z $NOTES_DIR ]]; then
  echo "[E] Environment variable is missing: NOTES_DIR"
  echo "[I] Use $HOME/notes as notes directory."
  export NOTES_DIR=$HOME/notes
fi

if ! mkdir -p $NOTES_DIR 2>/dev/null; then
  echo "[E] Failed to create notes directory, perhaps invalid path was specified?"
  echo "[I] NOTES_DIR=${NOTES_DIR}"
  exit 254
fi

QUICKNOTE_FORMAT="quicknote-%Y-%m-%d-%H%M"  # date format string
NOTE_EXT="md"
BASENAME="$(basename $0)"

cd $NOTES_DIR

ls_notes() {
  local ls_opts="$@"
  [[ -z $ls_opts ]] && ls_opts="-1t"
  ls $ls_opts && return 1
  return $?
}

open_note_dir() {
  if which open; then
    open . && return 0
  elif which nautilus; then
    nautilus . && return 0
  fi
  return $?
}

new_note() {
  local keywords="$@"
  local notename=""

  if [[ -z $keywords ]]; then
    notename="$(date +${QUICKNOTE_FORMAT})"
  else
    for keyword in ${keywords[@]}; do
      [[ -n $notename ]] && notename="${notename}-"
      notename="${notename}${keyword}"
    done
  fi
  notename="${notename}.${NOTE_EXT}"

  touch $notename
  vim_note $notename
  return $?
}

vim_note() {
  local keywords="$@"
  local vim=${EDITOR:-nvim}
  local pattern="^"

  for keyword in ${keywords[@]}; do
    pattern="${pattern}.*${keyword}"
  done
  pattern="${pattern}.*$"

  local n=$(ls -1 | grep -Eiw "${pattern}" | wc -l)
  if (( $n == 1 )); then
    vim "$(ls -1 | grep -Eiw "${pattern}")"
  else
    vim "$(ls -1 | grep -Eiw "${pattern}" | fzf)"
  fi

  return 0
}

rm_notes() {
  echo "Not yet implemented."
  return 0
}

usage() {
  cat <<EOF
A command line note taking utility.

Usage:
  $BASENAME new|n <name>      # Create new note
  $BASENAME vim <name>        # Open existing note
  $BASENAME ls <options>      # List notes, support ls options
  $BASENAME open|o            # Open notes directory
  $BASENAME rm                # Remove note
EOF
}

cli() {
  local cmd=""

  case "$1" in
    new|n)
      cmd="new_note"
      ;;
    nvim|vim|vi|v)
      cmd="vim_note"
      ;;
    ls)
      cmd="ls_notes"
      ;;
    open|o)
      cmd="open_note_dir"
      ;;
    rm)
      cmd="rm_notes"
      ;;
    *)
      cmd="usage"
      ;;
  esac
  shift

  $cmd $@
  exit $?
}

cli $@
