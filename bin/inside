#!/bin/bash

CONTAINER_IMAGE_CODE="ubuntu"
CONTAINER_IMAGE=""
CONTAINER_NAME=""
CONTAINER_HOSTNAME=""
WORKDIR=""
PULL_BEFORE_RUN=0
PERSISTENT=0
COPY_SSH_KEYS=0
DOOD=0


usage() {
cat <<EOF
usage: inside [-w dotfiles|ubuntu] [-H hostname] [path]
 -w, --with {dotfiles, *ubuntu}  specify container image
 -p, --persist                   keep container persistent
 -s, --copy-ssh-keys             copy SSH keys
 -H, --hostname [hostname]       specify container hostname
 -n, --name [name]               specify container name
 -D, --dood                      use docker-outside-of-docker
     --update                    pull the latest image before use
 -h, --help                      this help text
EOF
}


argparse() {
  while (( "$#" )); do
    case $1 in
      --with|-w)
        CONTAINER_IMAGE_CODE="$2"
        shift 2 ;;
      --update)
        PULL_BEFORE_RUN=1
        shift ;;
      --copy-ssh|-s)
        COPY_SSH_KEYS=1
        shift ;;
      --persist|-p)
        PERSISTENT=1
        shift ;;
      --hostname|-H)
        CONTAINER_HOSTNAME="$2"
        shift 2 ;;
      --name|-n)
        CONTAINER_NAME="$2"
        shift 2 ;;
      --dood|-D)
        DOOD=1
        shift ;;
      --help|-h)
        usage
        exit 0 ;;
      --*|-*)
        echo $opt
        usage
        exit 1 ;;
      *)
        WORKDIR="$1"
        shift ;;
    esac
  done
}


main() {
  local args="$@"

  if (( $# == 0 )); then
    usage
    exit 0
  fi

  argparse $args

  case "$CONTAINER_IMAGE_CODE" in
    "ubuntu")
      CONTAINER_IMAGE="ghcr.io/mi2428/ubuntu:latest" ;;
    "dotfiles")
      CONTAINER_IMAGE="ghcr.io/mi2428/dotfiles:latest" ;;
    *)
      usage
      exit 127 ;;
  esac

  if [[ -z $CONTAINER_NAME ]]; then
    for i in $(seq -f "%02g" 1 99); do
      CONTAINER_NAME="shizk-ubnt-${i}"
      docker ps -a --format "{{.Names}}" | grep -q $CONTAINER_NAME || break
    done
  fi

  if [[ -z "$CONTAINER_HOSTNAME" ]]; then
    CONTAINER_HOSTNAME="${CONTAINER_NAME}"
  fi

  if (( $PULL_BEFORE_RUN == 1 )); then
    docker pull $CONTAINER_IMAGE
  fi

  ARGS=""
  (( $PERSISTENT == 0 ))    && ARGS="${ARGS} --rm"
  (( $COPY_SSH_KEYS == 1 )) && ARGS="${ARGS} -v $HOME/.ssh:/etc/skel/.ssh:ro"

  if (( $DOOD == 1 )); then
    local docker_gid=$(getent group docker | cut -d ":" -f 3)
    ARGS="${ARGS} -v /var/run/docker.sock:/var/run/docker.sock"
    ARGS="${ARGS} -e HOST_DOCKER_GID=${docker_gid}"
  fi

  local remote_ip=$(awk '{print $1}' <<< "${SSH_CLIENT}")

  docker run -it \
    ${ARGS} \
    -w /work \
    -v $(cd $WORKDIR; pwd):/work \
    -e HOST_UID=$(id -u $USER) \
    -e HOST_GID=$(id -g $USER) \
    --dns 9.9.9.9 \
    --name $CONTAINER_NAME \
    --hostname $CONTAINER_HOSTNAME \
    --network host \
    $CONTAINER_IMAGE \
    sudo -u shizk OUTSIDE_HOSTNAME=$(hostname) SSH_CLIENT=${remote_ip} zsh --login 
}


main $@
